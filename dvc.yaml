stages:
  data_ingestion:
    cmd: python src\cnnClassifier\pipeline\stage_01_data_ingestion.py
    deps:
      - src\cnnClassifier\pipeline\stage_01_data_ingestion.py
      - config\config.yaml
    outs:
      - artifacts\data_ingestion\Data-CS-DVC
  prepare_base_model:
    cmd: python src\cnnClassifier\pipeline\stage_02_prepare_base_model.py
    deps:
      - src\cnnClassifier\pipeline\stage_02_prepare_base_model.py
      - config\config.yaml
    params:
      - IMAGE_SIZE
      - LEARNING_RATE
    outs:
      - artifacts/prepare_base_model
    
  model_training:
    cmd: python src\cnnClassifier\pipeline\stage_03_model_training.py
    deps:
      - src\cnnClassifier\pipeline\stage_03_model_training.py
      - config\config.yaml
      - artifacts\data_ingestion\Data-CS-DVC
      - artifacts\prepare_base_model
    params:
      - EPOCHS
      - BATCH_SIZE
      - AUGMENTATION
      - IMAGE_SIZE
    outs:
      - artifacts/training/model.h5
  evaluation:
    cmd: python src\cnnClassifier\pipeline\stage_04_model_evaluation_with_mlflow.py
    deps:
      - src\cnnClassifier\pipeline\stage_04_model_evaluation_with_mlflow.py
      - artifacts/training/model.h5
      - config\config.yaml
      - artifacts\data_ingestion\Data-CS-DVC
    params:
      - IMAGE_SIZE
      - BATCH_SIZE
    metrics: 
      - scores.json:
          cache: false
  model_split:
    cmd: python src\cnnClassifier\pipeline\stage_05_model_split.py
    deps:
      - src\cnnClassifier\pipeline\stage_05_model_split.py
      - config\config.yaml
      - artifacts/training/model.h5
    outs:
      - artifacts\split_model\hiding.h5
      - artifacts\split_model\reveal.h5
